{"version":3,"sources":["vendor/ember-cli/app-prefix.js","dummy/add-token/util.js","dummy/app.js","dummy/application/route.js","dummy/application/template.js","dummy/blueprints/surge.js","dummy/components/active-link.js","dummy/components/row-edit-controls/component.js","dummy/components/row-edit-controls/template.js","dummy/components/torii-iframe-placeholder.js","dummy/ember-arcgis-server-services/tests/addon.lint-test.js","dummy/ember-arcgis-server-services/tests/app.lint-test.js","dummy/ember-arcgis-server-services/tests/templates.template.lint-test.js","dummy/encode-form/util.js","dummy/ext/torii-provider-arcgis.js","dummy/index/route.js","dummy/index/template.js","dummy/initializers/container-debug-adapter.js","dummy/initializers/export-application-global.js","dummy/initializers/initialize-torii-callback.js","dummy/initializers/initialize-torii-session.js","dummy/initializers/initialize-torii.js","dummy/initializers/torii-provider-arcgis.js","dummy/instance-initializers/setup-routes.js","dummy/instance-initializers/walk-providers.js","dummy/mixins/active-link.js","dummy/parse-url/util.js","dummy/request/util.js","dummy/resolver.js","dummy/router.js","dummy/services/feature-service.js","dummy/services/image-service.js","dummy/services/map-service.js","dummy/services/popup.js","dummy/services/torii-session.js","dummy/services/torii.js","dummy/services/vector-service.js","dummy/should-add-token/util.js","dummy/signin/route.js","dummy/signin/template.js","dummy/sites/index/controller.js","dummy/sites/index/route.js","dummy/sites/index/template.js","dummy/sites/new/controller.js","dummy/sites/new/route.js","dummy/sites/new/template.js","dummy/sites/route.js","dummy/sites/site/edit/controller.js","dummy/sites/site/edit/route.js","dummy/sites/site/edit/template.js","dummy/sites/site/route.js","dummy/sites/site/template.js","dummy/sites/template.js","dummy/templates/application.js","dummy/torii-adapters/application.js","dummy/torii-adapters/arcgis-oauth-bearer.js","dummy/torii-providers/arcgis-oauth-bearer.js","dummy/torii-providers/query-string.js","dummy/utils/url-utils.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["'use strict';\n\n\n","define('dummy/add-token/util', ['exports', 'ember-arcgis-server-services/add-token/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _util.default;\n    }\n  });\n});","define('dummy/app', ['exports', 'dummy/resolver', 'ember-load-initializers', 'dummy/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define('dummy/application/route', ['exports', 'dummy/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    session: Ember.inject.service('session'),\n\n    beforeModel() {\n      return this.get('session').fetch().then(() => {\n        Ember.debug('User has been automatically logged in... ');\n      }).catch(() => {\n        Ember.debug('No cookie was found, user is anonymous... ');\n      });\n    },\n    model() {\n      // let token = this.get('session.token');\n    },\n    actions: {\n      accessDenied: function () {\n        this.transitionTo('signin');\n      },\n      signout: function () {\n        // depending on the type of auth, we need to do different things\n        if (_environment.default.torii.providers['arcgis-oauth-bearer'].display && _environment.default.torii.providers['arcgis-oauth-bearer'].display === 'iframe') {\n          // redirect the window to the signout url\n          window.location = this.get('session.signoutUrl');\n        } else {\n          this.get('session').close();\n          // this.transitionTo('index');\n        }\n      }\n    }\n  });\n});","define(\"dummy/application/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"cNrjkozB\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"nav\\\"],[11,\\\"class\\\",\\\"navbar navbar-default\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"navbar-header\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"navbar-toggle collapsed\\\"],[11,\\\"data-toggle\\\",\\\"collapse\\\"],[11,\\\"data-target\\\",\\\"#navbar\\\"],[11,\\\"aria-expanded\\\",\\\"false\\\"],[11,\\\"aria-controls\\\",\\\"navbar\\\"],[11,\\\"type\\\",\\\"button\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"sr-only\\\"],[9],[0,\\\"Toggle navigation\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"icon-bar\\\"],[9],[10],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"icon-bar\\\"],[9],[10],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"icon-bar\\\"],[9],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n\\\\n      \\\"],[4,\\\"link-to\\\",[\\\"index\\\"],[[\\\"class\\\"],[\\\"navbar-brand\\\"]],{\\\"statements\\\":[[0,\\\"ember-arcgis-server-services\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"id\\\",\\\"navbar\\\"],[11,\\\"class\\\",\\\"navbar-collapse collapse\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"nav navbar-nav\\\"],[9],[0,\\\"\\\\n        \\\"],[4,\\\"active-link\\\",null,null,{\\\"statements\\\":[[4,\\\"link-to\\\",[\\\"index\\\"],null,{\\\"statements\\\":[[0,\\\"Home\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n        \\\"],[4,\\\"active-link\\\",null,null,{\\\"statements\\\":[[4,\\\"link-to\\\",[\\\"sites\\\"],null,{\\\"statements\\\":[[0,\\\"Sites\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"ul\\\"],[11,\\\"class\\\",\\\"nav navbar-nav navbar-right\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"session\\\",\\\"isAuthenticated\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"li\\\"],[9],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"signout\\\"]],[9],[0,\\\"Sign Out\\\"],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"          \\\"],[4,\\\"active-link\\\",null,null,{\\\"statements\\\":[[4,\\\"link-to\\\",[\\\"signin\\\"],null,{\\\"statements\\\":[[0,\\\"Sign In\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n        \\\"],[7,\\\"li\\\"],[9],[7,\\\"a\\\"],[11,\\\"href\\\",\\\"https://github.com/Esri/ember-arcgis-server-services\\\"],[9],[0,\\\"Github\\\"],[10],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[1,[21,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"dummy/application/template.hbs\" } });\n});","define('dummy/blueprints/surge', ['exports', 'ember-cli-surge/blueprints/surge'], function (exports, _surge) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _surge.default;\n    }\n  });\n});","define('dummy/components/active-link', ['exports', 'ember-cli-active-link-wrapper/components/active-link'], function (exports, _activeLink) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _activeLink.default;\n});","define('dummy/components/row-edit-controls/component', ['exports', 'dummy/components/row-edit-controls/template'], function (exports, _template) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    layout: _template.default,\n    tagName: 'ul',\n    classNames: ['row-edit-controls'],\n    canEdit: Ember.computed('model', function () {\n      return this.get('currentUser') === this.get('model.attributes.Creator');\n    }),\n\n    actions: {\n      delete(id) {\n        Ember.debug('Delete got id ' + id);\n        this.get('onDelete')(id);\n      }\n    }\n\n  });\n});","define(\"dummy/components/row-edit-controls/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"JWa3elGg\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"if\\\",[[23,[\\\"canEdit\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[7,\\\"li\\\"],[9],[4,\\\"link-to\\\",[\\\"sites.site.edit\\\",[23,[\\\"model\\\",\\\"attributes\\\",\\\"OBJECTID\\\"]]],[[\\\"class\\\"],[\\\"btn btn-default\\\"]],{\\\"statements\\\":[[7,\\\"span\\\"],[11,\\\"class\\\",\\\"glyphicon glyphicon-pencil\\\"],[9],[10]],\\\"parameters\\\":[]},null],[10],[0,\\\"\\\\n  \\\"],[7,\\\"li\\\"],[9],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-danger\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"delete\\\",[23,[\\\"model\\\",\\\"attributes\\\",\\\"OBJECTID\\\"]]]],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"glyphicon glyphicon-trash\\\"],[9],[10],[10],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"dummy/components/row-edit-controls/template.hbs\" } });\n});","define('dummy/components/torii-iframe-placeholder', ['exports', 'torii/components/torii-iframe-placeholder'], function (exports, _toriiIframePlaceholder) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _toriiIframePlaceholder.default;\n});","define('dummy/ember-arcgis-server-services/tests/addon.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | addon');\n\n  QUnit.test('addon/mixins/ags-service-mixin.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'addon/mixins/ags-service-mixin.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('addon/mixins/layers.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'addon/mixins/layers.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('addon/services/feature-service.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'addon/services/feature-service.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('addon/services/image-service.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'addon/services/image-service.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('addon/services/map-service.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'addon/services/map-service.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('addon/services/vector-service.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'addon/services/vector-service.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('addon/utils/add-token.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'addon/utils/add-token.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('addon/utils/encode-form.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'addon/utils/encode-form.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('addon/utils/parse-url.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'addon/utils/parse-url.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('addon/utils/request.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'addon/utils/request.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('addon/utils/should-add-token.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'addon/utils/should-add-token.js should pass ESLint\\n\\n');\n  });\n});","define('dummy/ember-arcgis-server-services/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app/add-token/util.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app/add-token/util.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app/encode-form/util.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app/encode-form/util.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app/parse-url/util.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app/parse-url/util.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app/request/util.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app/request/util.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app/services/feature-service.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app/services/feature-service.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app/services/image-service.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app/services/image-service.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app/services/map-service.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app/services/map-service.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app/services/vector-service.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app/services/vector-service.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('app/should-add-token/util.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app/should-add-token/util.js should pass ESLint\\n\\n');\n  });\n});","define(\"dummy/ember-arcgis-server-services/tests/templates.template.lint-test\", [], function () {\n  \"use strict\";\n});","define('dummy/encode-form/util', ['exports', 'ember-arcgis-server-services/encode-form/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _util.default;\n    }\n  });\n});","define('dummy/ext/torii-provider-arcgis', ['torii/services/torii-session', 'torii-provider-arcgis/mixins/gatekeeper'], function (_toriiSession, _gatekeeper) {\n  'use strict';\n\n  /*\n   * Copyright (c) 2016-2018 Esri\n   * Apache-2.0\n  */\n\n  /**\n   * ext/torii-provider-arcgis.js\n   *\n   * This file simply re-opens the Torii Session object,\n   * using the GateKeeper mixin\n   */\n  _toriiSession.default.reopen(_gatekeeper.default);\n});","define('dummy/index/route', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define(\"dummy/index/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Jzs8zBaZ\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-12\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"jumbotron\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"h1\\\"],[9],[0,\\\"Ember ArcGIS Server Services\\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"A set of Ember Services that abstract working with ArcGIS Server or Hosted Services.\\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[7,\\\"strong\\\"],[9],[0,\\\"Note:\\\"],[10],[0,\\\" This addon is under development with feature priority defined by ArcGIS Open Data requirements. PR\\\\\\\"s accepted for additional functionality.\\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"session\\\",\\\"isAuthenticated\\\"]]],null,{\\\"statements\\\":[[0,\\\"          \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"signout\\\"]],[9],[0,\\\"Sign Out\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"          \\\"],[4,\\\"link-to\\\",[\\\"signin\\\"],[[\\\"class\\\"],[\\\"btn btn-primary\\\"]],{\\\"statements\\\":[[0,\\\"Sign In\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"      \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"session\\\",\\\"isAuthenticated\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"alert alert-info\\\"],[11,\\\"role\\\",\\\"alert\\\"],[9],[0,\\\"\\\\n        Hello \\\"],[1,[23,[\\\"session\\\",\\\"currentUser\\\",\\\"username\\\"]],false],[0,\\\", you are currently authenticated.\\\\n      \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"alert alert-danger\\\"],[11,\\\"role\\\",\\\"alert\\\"],[9],[0,\\\"\\\\n        You are not currently authenticated.\\\\n      \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"dummy/index/template.hbs\" } });\n});","define('dummy/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize() {\n      let app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('dummy/initializers/export-application-global', ['exports', 'dummy/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function () {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports.default = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('dummy/initializers/initialize-torii-callback', ['exports', 'dummy/config/environment', 'torii/redirect-handler'], function (exports, _environment, _redirectHandler) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'torii-callback',\n    before: 'torii',\n    initialize(application) {\n      if (arguments[1]) {\n        // Ember < 2.1\n        application = arguments[1];\n      }\n      if (_environment.default.torii && _environment.default.torii.disableRedirectInitializer) {\n        return;\n      }\n      application.deferReadiness();\n      _redirectHandler.default.handle(window).catch(function () {\n        application.advanceReadiness();\n      });\n    }\n  };\n});","define('dummy/initializers/initialize-torii-session', ['exports', 'torii/bootstrap/session', 'torii/configuration'], function (exports, _session, _configuration) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'torii-session',\n    after: 'torii',\n\n    initialize(application) {\n      if (arguments[1]) {\n        // Ember < 2.1\n        application = arguments[1];\n      }\n      const configuration = (0, _configuration.getConfiguration)();\n      if (!configuration.sessionServiceName) {\n        return;\n      }\n\n      (0, _session.default)(application, configuration.sessionServiceName);\n\n      var sessionFactoryName = 'service:' + configuration.sessionServiceName;\n      application.inject('adapter', configuration.sessionServiceName, sessionFactoryName);\n    }\n  };\n});","define('dummy/initializers/initialize-torii', ['exports', 'torii/bootstrap/torii', 'torii/configuration', 'dummy/config/environment'], function (exports, _torii, _configuration, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var initializer = {\n    name: 'torii',\n    initialize(application) {\n      if (arguments[1]) {\n        // Ember < 2.1\n        application = arguments[1];\n      }\n      (0, _configuration.configure)(_environment.default.torii || {});\n      (0, _torii.default)(application);\n      application.inject('route', 'torii', 'service:torii');\n    }\n  };\n\n  exports.default = initializer;\n});","define('dummy/initializers/torii-provider-arcgis', ['exports', 'dummy/ext/torii-provider-arcgis'], function (exports, _toriiProviderArcgis) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {}\n  // do nothing here...\n\n\n  // we need to export this stuff...\n  /*\n   * Copyright (c) 2016-2018 Esri\n   * Apache-2.0\n  */\n\n  /**\n   * initializers/torii-provider-arcgis.js\n   *\n   * This file is simply here so that it includes the extension file\n   * which reopen's the Torii Session, and adds additional methods\n   * to it which are useful for ArcGIS Online Sessions\n   */\n  /* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"ext\" }] */\n  exports.default = {\n    name: 'torii-provider-arcgis',\n    initialize: initialize\n  };\n});","define('dummy/instance-initializers/setup-routes', ['exports', 'torii/bootstrap/routing', 'torii/configuration', 'torii/compat/get-router-instance', 'torii/compat/get-router-lib', 'torii/router-dsl-ext'], function (exports, _routing, _configuration, _getRouterInstance, _getRouterLib) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'torii-setup-routes',\n    initialize(applicationInstance /*, registry */) {\n      const configuration = (0, _configuration.getConfiguration)();\n\n      if (!configuration.sessionServiceName) {\n        return;\n      }\n\n      let router = (0, _getRouterInstance.default)(applicationInstance);\n      var setupRoutes = function () {\n        let routerLib = (0, _getRouterLib.default)(router);\n        var authenticatedRoutes = routerLib.authenticatedRoutes;\n        var hasAuthenticatedRoutes = !Ember.isEmpty(authenticatedRoutes);\n        if (hasAuthenticatedRoutes) {\n          (0, _routing.default)(applicationInstance, authenticatedRoutes);\n        }\n        router.off('willTransition', setupRoutes);\n      };\n      router.on('willTransition', setupRoutes);\n    }\n  };\n});","define('dummy/instance-initializers/walk-providers', ['exports', 'torii/lib/container-utils', 'torii/configuration'], function (exports, _containerUtils, _configuration) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'torii-walk-providers',\n    initialize(applicationInstance) {\n      let configuration = (0, _configuration.getConfiguration)();\n      // Walk all configured providers and eagerly instantiate\n      // them. This gives providers with initialization side effects\n      // like facebook-connect a chance to load up assets.\n      for (var key in configuration.providers) {\n        if (configuration.providers.hasOwnProperty(key)) {\n          (0, _containerUtils.lookup)(applicationInstance, 'torii-provider:' + key);\n        }\n      }\n    }\n  };\n});","define('dummy/mixins/active-link', ['exports', 'ember-cli-active-link-wrapper/mixins/active-link'], function (exports, _activeLink) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _activeLink.default;\n});","define('dummy/parse-url/util', ['exports', 'ember-arcgis-server-services/parse-url/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _util.default;\n    }\n  });\n});","define('dummy/request/util', ['exports', 'ember-arcgis-server-services/request/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _util.default;\n    }\n  });\n});","define('dummy/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('dummy/router', ['exports', 'dummy/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {\n    this.route('signin');\n    this.route('sites', function () {\n      this.route('site', { path: '/:id' }, function () {\n        this.route('edit');\n      });\n      this.route('new');\n    });\n  });\n\n  exports.default = Router;\n});","define('dummy/services/feature-service', ['exports', 'ember-arcgis-server-services/services/feature-service'], function (exports, _featureService) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _featureService.default;\n    }\n  });\n});","define('dummy/services/image-service', ['exports', 'ember-arcgis-server-services/services/image-service'], function (exports, _imageService) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _imageService.default;\n    }\n  });\n});","define('dummy/services/map-service', ['exports', 'ember-arcgis-server-services/services/map-service'], function (exports, _mapService) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _mapService.default;\n    }\n  });\n});","define('dummy/services/popup', ['exports', 'torii/services/popup'], function (exports, _popup) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _popup.default;\n    }\n  });\n});","define('dummy/services/torii-session', ['exports', 'torii/services/torii-session'], function (exports, _toriiSession) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _toriiSession.default;\n    }\n  });\n});","define('dummy/services/torii', ['exports', 'torii/services/torii'], function (exports, _torii) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _torii.default;\n    }\n  });\n});","define('dummy/services/vector-service', ['exports', 'ember-arcgis-server-services/services/vector-service'], function (exports, _vectorService) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _vectorService.default;\n    }\n  });\n});","define('dummy/should-add-token/util', ['exports', 'ember-arcgis-server-services/should-add-token/util'], function (exports, _util) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _util.default;\n    }\n  });\n});","define('dummy/signin/route', ['exports', 'dummy/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n\n    deactivate: function () {\n      // if you are using iframes, you will need to remove the\n      // iframe from the DOM here so torii gets notified that the\n      // auth attempt was cancelled.\n      Ember.debug('route:signin:deactivate fired...');\n    },\n\n    actions: {\n      signin: function () {\n        this.get('session').open('arcgis-oauth-bearer').then(authorization => {\n          Ember.debug('AUTH SUCCESS: ', authorization);\n          // transition to some secured route or... so whatever is needed\n          this.controller.transitionToRoute('secure');\n        }).catch(err => {\n          Ember.debug('AUTH ERROR: ', err);\n        });\n      },\n\n      /**\n       * In order to show the iframe when this route loads\n       * we add a didTransition hook, and then schedule the\n       * session.open to be called after it's rendered\n       */\n      didTransition: function () {\n        // only do this if we are using iframe style\n        if (_environment.default.torii.providers['arcgis-oauth-bearer'].display && _environment.default.torii.providers['arcgis-oauth-bearer'].display === 'iframe') {\n          // --- USE THIS BLOCK IN YOUR APP --\n          Ember.run.schedule('afterRender', this, function () {\n            this.get('session').open('arcgis-oauth-bearer').then(authorization => {\n              Ember.debug('AUTH SUCCESS: ', authorization);\n              // transition to secured route\n              this.controller.transitionToRoute('secure');\n            }).catch(err => {\n              Ember.debug('AUTH ERROR: ' + JSON.stringify(err));\n            });\n          });\n          // -----------------------------------\n        }\n      }\n    }\n  });\n});","define(\"dummy/signin/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"70jSM6XO\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-6\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"usingIframe\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"h2\\\"],[9],[0,\\\"ArcGIS IFrame Authentication\\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"\\\\n        This style of login only works for apps hosted on *.arcgis.com domains.\\\\n        This allows for the authentication to occur in an iframe instead of a full-page\\\\n        redirect or a pop-out window.\\\\n      \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"h2\\\"],[9],[0,\\\"ArcGIS Application Authentication\\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"Press the button below to open the pop-up and sign-in.\\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"signin\\\"]],[9],[0,\\\"Show Sign In\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-6\\\"],[9],[0,\\\"\\\\n    \\\"],[1,[21,\\\"torii-iframe-placeholder\\\"],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"],[1,[21,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"dummy/signin/template.hbs\" } });\n});","define('dummy/sites/index/controller', ['exports', 'dummy/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    session: Ember.inject.service(),\n    featureService: Ember.inject.service('feature-service'),\n    queryParams: ['q'],\n    start: 1,\n    q: null,\n    query: '*',\n    num: 10,\n    owner: null,\n    tags: null,\n    typeKeywords: null,\n    type: null,\n\n    totalCount: Ember.computed('model.features', function () {\n      return this.get('model.features.length');\n    }),\n\n    queryChanged: Ember.observer('q', function () {\n      this.set('query', this.get('q'));\n    }),\n\n    portalItemUrl: Ember.computed('session.portal', function () {\n      let cbu = this.get('session.portal.customBaseUrl');\n      let urlKey = this.get('session.portal.urlKey');\n      return `https://${urlKey}.${cbu}/home/item.html?id=`;\n    }),\n\n    currentUser: Ember.computed.reads('session.currentUser.username'),\n\n    actions: {\n      filter() {\n        this.set('q', this.get('query'));\n        // reset the page\n        this.set('start', 1);\n        this.transitionToRoute('sites.index');\n      },\n      delete(objectId) {\n        Ember.debug('Deleting Id: ' + objectId);\n        let token = this.get('session.token');\n        let url = _environment.default.APP.domainServiceUrl; // 'https://services.arcgis.com/bkrWlSKcjUDFDtgw/arcgis/rest/services/sitedomains/FeatureServer/0';\n        this.get('featureService').deleteFeature(url, objectId, token).then(() => /*result*/{\n          // instead of refreshing the model for the list, just remove the entry\n          let remaining = this.get('model.features').filter(item => {\n            return item.attributes.OBJECTID !== objectId;\n          });\n          this.set('model.features', remaining);\n        });\n      }\n\n    }\n  });\n});","define('dummy/sites/index/route', ['exports', 'dummy/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    featureService: Ember.inject.service('feature-service'),\n\n    queryParams: {\n      'q': { refreshModel: true }\n    },\n\n    model(params) {\n      let url = _environment.default.APP.domainServiceUrl; // 'https://services.arcgis.com/bkrWlSKcjUDFDtgw/arcgis/rest/services/sitedomains/FeatureServer/0';\n      let options = {\n        includeGeometry: false,\n        outFields: '*'\n      };\n      // use the params to issue a search against this layer\n      if (params.q && params.q !== '*') {\n        options.where = encodeURI(\"domain='\" + params.q + \"'\");\n      } else {\n        options.where = encodeURI('1=1');\n      }\n\n      return this.get('featureService').query(url, options);\n    }\n  });\n});","define(\"dummy/sites/index/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"hzacVzEQ\", \"block\": \"{\\\"symbols\\\":[\\\"row\\\"],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-12\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"form-group\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"form\\\"],[11,\\\"class\\\",\\\"input-group\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"filter\\\"],[[\\\"on\\\"],[\\\"submit\\\"]]],[9],[0,\\\"\\\\n\\\"],[0,\\\"        \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"class\\\",\\\"placeholder\\\"],[[23,[\\\"query\\\"]],\\\"form-control\\\",\\\"Domain\\\"]]],false],[0,\\\"\\\\n        \\\"],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"input-group-btn\\\"],[9],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-default\\\"],[9],[7,\\\"span\\\"],[11,\\\"class\\\",\\\"glyphicon glyphicon-search\\\"],[9],[10],[10],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[4,\\\"link-to\\\",[\\\"sites.new\\\"],[[\\\"class\\\"],[\\\"btn btn-default\\\"]],{\\\"statements\\\":[[0,\\\"New\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-12\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[23,[\\\"totalCount\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"table\\\"],[11,\\\"class\\\",\\\"table table-striped\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"thead\\\"],[9],[0,\\\"\\\\n          \\\"],[7,\\\"tr\\\"],[9],[0,\\\"\\\\n            \\\"],[7,\\\"td\\\"],[9],[0,\\\"Site\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"td\\\"],[9],[0,\\\"Domain\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"td\\\"],[9],[0,\\\"Site Id\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"td\\\"],[9],[0,\\\"Owner\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"td\\\"],[9],[0,\\\"Client Key\\\"],[10],[0,\\\"\\\\n            \\\"],[7,\\\"td\\\"],[9],[0,\\\"Actions\\\"],[10],[0,\\\"\\\\n          \\\"],[10],[0,\\\"\\\\n        \\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"tbody\\\"],[9],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[23,[\\\"model\\\",\\\"features\\\"]]],null,{\\\"statements\\\":[[0,\\\"            \\\"],[7,\\\"tr\\\"],[9],[0,\\\"\\\\n              \\\"],[7,\\\"td\\\"],[9],[1,[22,1,[\\\"attributes\\\",\\\"siteTitle\\\"]],false],[10],[0,\\\"\\\\n              \\\"],[7,\\\"td\\\"],[9],[1,[22,1,[\\\"attributes\\\",\\\"domain\\\"]],false],[10],[0,\\\"\\\\n              \\\"],[7,\\\"td\\\"],[9],[1,[22,1,[\\\"attributes\\\",\\\"siteId\\\"]],false],[10],[0,\\\"\\\\n              \\\"],[7,\\\"td\\\"],[9],[1,[22,1,[\\\"attributes\\\",\\\"Creator\\\"]],false],[10],[0,\\\"\\\\n              \\\"],[7,\\\"td\\\"],[9],[1,[22,1,[\\\"attributes\\\",\\\"clientKey\\\"]],false],[10],[0,\\\"\\\\n              \\\"],[7,\\\"td\\\"],[9],[0,\\\"\\\\n                \\\"],[1,[27,\\\"row-edit-controls\\\",null,[[\\\"model\\\",\\\"currentUser\\\",\\\"onDelete\\\"],[[22,1,[]],[23,[\\\"currentUser\\\"]],[27,\\\"action\\\",[[22,0,[]],\\\"delete\\\"],null]]]],false],[0,\\\"\\\\n              \\\"],[10],[0,\\\"\\\\n            \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"        \\\"],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"      \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"alert alert-info\\\"],[11,\\\"role\\\",\\\"alert\\\"],[9],[0,\\\"\\\\n        \\\"],[7,\\\"h4\\\"],[9],[0,\\\"No Results Found.\\\"],[10],[0,\\\"\\\\n        \\\"],[7,\\\"p\\\"],[9],[0,\\\"Please try another query.\\\"],[10],[0,\\\"\\\\n      \\\"],[10],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\ncurrentUser: \\\"],[1,[21,\\\"currentUser\\\"],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"dummy/sites/index/template.hbs\" } });\n});","define('dummy/sites/new/controller', ['exports', 'dummy/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    session: Ember.inject.service('session'),\n    featureService: Ember.inject.service('feature-service'),\n    status: 'Unsaved.',\n\n    domain: 'foobar.com',\n    siteId: '3ef',\n    siteName: 'Test Site Foobar.com',\n\n    actions: {\n      save() {\n        if (!this.get('domain')) {\n          this.set('status', 'Domain can not be empty');\n          return;\n        }\n        if (!this.get('siteId')) {\n          this.set('status', 'Site Id can not be empty');\n          return;\n        }\n        // check if there is an entry for domain...\n        let url = _environment.default.APP.domainServiceUrl; // 'https://services.arcgis.com/bkrWlSKcjUDFDtgw/arcgis/rest/services/sitedomains/FeatureServer/0';\n        let options = {\n          includeGeometry: false,\n          outFields: '*'\n        };\n        options.where = encodeURI(\"domain='\" + this.get('domain') + \"'\");\n        this.get('featureService').query(url, options).then(results => {\n          if (results.features.length) {\n            // entry already exists\n            this.set('status', 'Entry for that domain exists.');\n            throw new Error('Entry for that domain exists');\n          } else {\n            // construct the row and save it...\n            let feature = {\n              geometry: null,\n              attributes: {\n                domain: this.get('domain'),\n                siteId: this.get('siteId'),\n                siteTitle: this.get('siteName'),\n                clientKey: this.get('clientKey')\n              }\n            };\n            let token = this.get('session.token');\n\n            return this.get('featureService').addFeature(url, feature, token);\n          }\n        }).then(addResponse => {\n          if (addResponse.addResults.length === 1) {\n            this.set('status', 'Saved.');\n            this.transitionToRoute('sites');\n          }\n        }).catch(err => {\n          this.set('status', err.message);\n        });\n      }\n    }\n  });\n});","define('dummy/sites/new/route', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define(\"dummy/sites/new/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"oamByO5x\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-6\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"New Entry\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"form-group\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"\\\"],[9],[0,\\\"DOMAIN\\\"],[10],[0,\\\"\\\\n      \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"class\\\",\\\"placeholder\\\"],[[23,[\\\"domain\\\"]],\\\"form-control\\\",\\\"Domain\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"form-group\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"\\\"],[9],[0,\\\"Site Id\\\"],[10],[0,\\\"\\\\n      \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"class\\\",\\\"placeholder\\\"],[[23,[\\\"siteId\\\"]],\\\"form-control\\\",\\\"Site Id\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"form-group\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"\\\"],[9],[0,\\\"Site Name\\\"],[10],[0,\\\"\\\\n      \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"class\\\",\\\"placeholder\\\"],[[23,[\\\"siteName\\\"]],\\\"form-control\\\",\\\"Site Name\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"form-group\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"\\\"],[9],[0,\\\"Client Key\\\"],[10],[0,\\\"\\\\n      \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"class\\\",\\\"placeholder\\\"],[[23,[\\\"clientKey\\\"]],\\\"form-control\\\",\\\"Site Name\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-6\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n    \\\"],[1,[21,\\\"status\\\"],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"dummy/sites/new/template.hbs\" } });\n});","define('dummy/sites/route', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({});\n});","define('dummy/sites/site/edit/controller', ['exports', 'dummy/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    session: Ember.inject.service('session'),\n    featureService: Ember.inject.service('feature-service'),\n    status: 'Unsaved.',\n\n    actions: {\n      save() {\n        if (!this.get('model.attributes.domain')) {\n          this.set('status', 'Domain can not be empty');\n          return;\n        }\n        if (!this.get('model.attributes.siteId')) {\n          this.set('status', 'Site Id can not be empty');\n          return;\n        }\n        // check if there is an entry for domain...\n        let url = _environment.default.APP.domainServiceUrl; // 'https://services.arcgis.com/bkrWlSKcjUDFDtgw/arcgis/rest/services/sitedomains/FeatureServer/0';\n        let options = {\n          includeGeometry: false,\n          outFields: '*'\n        };\n        options.where = encodeURI(\"domain='\" + this.get('domain') + \"'\");\n        this.get('featureService').query(url, options).then(results => {\n          if (results.features.length) {\n            // entry already exists\n            this.set('status', 'Entry for that domain exists.');\n            throw new Error('Entry for that domain exists');\n          } else {\n            // construct the row and save it...\n            let feature = this.get('model');\n            let token = this.get('session.token');\n\n            return this.get('featureService').updateFeature(url, feature, token);\n          }\n        }).then(addResponse => {\n          if (addResponse.updateResults.length === 1) {\n            this.set('status', 'Saved.');\n            this.transitionToRoute('sites');\n          }\n        }).catch(err => {\n          this.set('status', err.message);\n        });\n      }\n    }\n  });\n});","define('dummy/sites/site/edit/route', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    model() {\n      return this.modelFor('sites.site');\n    }\n  });\n});","define(\"dummy/sites/site/edit/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"bDl2cnaI\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-6\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Edit Entry\\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"form-group\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"\\\"],[9],[0,\\\"Domain\\\"],[10],[0,\\\"\\\\n      \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"class\\\",\\\"placeholder\\\"],[[23,[\\\"model\\\",\\\"attributes\\\",\\\"domain\\\"]],\\\"form-control\\\",\\\"Domain\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"form-group\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"\\\"],[9],[0,\\\"Site Id\\\"],[10],[0,\\\"\\\\n      \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"class\\\",\\\"placeholder\\\"],[[23,[\\\"model\\\",\\\"attributes\\\",\\\"siteId\\\"]],\\\"form-control\\\",\\\"Site Id\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"form-group\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"\\\"],[9],[0,\\\"Site Name\\\"],[10],[0,\\\"\\\\n      \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"class\\\",\\\"placeholder\\\"],[[23,[\\\"model\\\",\\\"attributes\\\",\\\"siteTitle\\\"]],\\\"form-control\\\",\\\"Site Name\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"form-group\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"label\\\"],[11,\\\"for\\\",\\\"\\\"],[9],[0,\\\"Client Key\\\"],[10],[0,\\\"\\\\n      \\\"],[1,[27,\\\"input\\\",null,[[\\\"value\\\",\\\"class\\\",\\\"placeholder\\\"],[[23,[\\\"model\\\",\\\"attributes\\\",\\\"clientKey\\\"]],\\\"form-control\\\",\\\"Site Name\\\"]]],false],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n    \\\"],[7,\\\"button\\\"],[11,\\\"class\\\",\\\"btn btn-primary\\\"],[11,\\\"type\\\",\\\"button\\\"],[3,\\\"action\\\",[[22,0,[]],\\\"save\\\"]],[9],[0,\\\"Save\\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-6\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"h3\\\"],[9],[0,\\\"Status\\\"],[10],[0,\\\"\\\\n    \\\"],[1,[21,\\\"status\\\"],false],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"dummy/sites/site/edit/template.hbs\" } });\n});","define('dummy/sites/site/route', ['exports', 'dummy/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    featureService: Ember.inject.service('feature-service'),\n    model(params) {\n      let url = _environment.default.APP.domainServiceUrl;\n      let options = {\n        includeGeometry: false,\n        outFields: '*'\n      };\n      if (params.id) {\n        options.where = encodeURI('OBJECTID=' + params.id);\n      }\n      return this.get('featureService').query(url, options).then(results => {\n        return results.features[0];\n      });\n    }\n  });\n});","define(\"dummy/sites/site/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"dTGSZVfd\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[21,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"dummy/sites/site/template.hbs\" } });\n});","define(\"dummy/sites/template\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"O5MCDi6y\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"div\\\"],[11,\\\"class\\\",\\\"container\\\"],[9],[0,\\\"\\\\n  \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"row\\\"],[9],[0,\\\"\\\\n    \\\"],[7,\\\"div\\\"],[11,\\\"class\\\",\\\"col-sm-12\\\"],[9],[0,\\\"\\\\n      \\\"],[7,\\\"h2\\\"],[9],[0,\\\"Example App\\\"],[10],[0,\\\"\\\\n      \\\"],[7,\\\"p\\\"],[9],[0,\\\"This app demos working with a feature service. You can create new records, list records, search for records, and - if you own the record - update or delete a record\\\"],[10],[0,\\\"\\\\n    \\\"],[10],[0,\\\"\\\\n  \\\"],[10],[0,\\\"\\\\n  \\\"],[1,[21,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\"],[10],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"dummy/sites/template.hbs\" } });\n});","define(\"dummy/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"FJRY0S8x\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[7,\\\"h2\\\"],[11,\\\"id\\\",\\\"title\\\"],[9],[0,\\\"Welcome to Ember\\\"],[10],[0,\\\"\\\\n\\\\n\\\"],[1,[21,\\\"outlet\\\"],false]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"dummy/templates/application.hbs\" } });\n});","define('dummy/torii-adapters/application', ['exports', 'dummy/torii-adapters/arcgis-oauth-bearer'], function (exports, _arcgisOauthBearer) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _arcgisOauthBearer.default;\n});","define('dummy/torii-adapters/arcgis-oauth-bearer', ['exports', 'dummy/config/environment', 'fetch', '@esri/arcgis-rest-request', '@esri/arcgis-rest-auth', 'torii-provider-arcgis/utils/url-utils'], function (exports, _environment, _fetch, _arcgisRestRequest, _arcgisRestAuth, _urlUtils) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Object.extend({\n\n    authCookieName: 'esri_auth',\n\n    portalBaseUrl: 'https://www.arcgis.com/',\n\n    /**\n     * Get the signout url\n     */\n    signoutUrl: Ember.computed('portalBaseUrl', function () {\n      // baseURL is basically deprecated, in preference of rootURL.\n      // So, we will use baseURL if present, but prefer rootURL\n      let base = _environment.default.baseURL || _environment.default.rootURL;\n      return this.get('portalBaseUrl') + '/sharing/rest/oauth2/signout?redirect_uri=' + window.location.protocol + '//' + window.location.host + base;\n    }),\n\n    /**\n     * Friendlyer means to get provider settings\n     */\n    settings: Ember.computed('ENV.torii.providers', function () {\n      return _environment.default.torii.providers['arcgis-oauth-bearer'];\n    }),\n\n    /**\n     * Initialize the adapter\n     * As it starts up we basically check for various configuration\n     * options, and update the defaults\n     */\n    init() {\n      this._super.init && this._super.init.apply(this, arguments);\n      if (_environment.default.APP.authCookieName) {\n        this.set('authCookieName', _environment.default.APP.authCookieName);\n      }\n      // Unless working against a portal instance, this can be left as the default\n      if (this.get('settings').portalUrl) {\n        this.set('portalBaseUrl', this.get('settings').portalUrl);\n      } else {\n        (true && Ember.warn('ENV.torii.providers[\\'arcgis-oauth-bearer\\'].portalUrl not defined. Defaulting to https://www.arcgis.com'));\n      }\n    },\n\n    /**\n     * This is called from the provider.open method, and it's job is to\n     * fetch additional information from the Portal and populate the torii session service\n     */\n    open(authentication) {\n      let debugPrefix = 'torii adapter.open:: ';\n      // create the sessionInfo object that we return at the end of this\n      // it is *close* to the object passed in, but it is different\n      const sessionInfo = {\n        authType: authentication.properties.authType || 'token',\n        withCredentials: authentication.properties.withCredentials,\n        token: authentication.properties.token\n      };\n      // instantiate an auth session from what's in the cookie/url hash\n      if (!authentication.authMgr) {\n        Ember.debug(`${debugPrefix} Creating an AuthMgr`);\n        // create the arcgis-rest-js auth manager aka UserSession\n        sessionInfo.authMgr = this._createAuthManager(authentication.properties);\n      } else {\n        Ember.debug(`${debugPrefix} Recieved an AuthMgr`);\n        sessionInfo.authMgr = authentication.authMgr;\n      }\n\n      let portalSelfPromise;\n      // check if authentication.hash contains a portalSelf object\n      if (authentication.properties.portalSelf) {\n        Ember.debug(`${debugPrefix} Recieved a portalSelf - not making xhr`);\n        // webTier has likely occured, so we can side-step the portalSelf call..\n        portalSelfPromise = Ember.RSVP.resolve(authentication.properties.portalSelf);\n        // get rid of the property so it does not get used in other contexts..\n        delete authentication.properties.portalSelf;\n      } else {\n        // we have to fetch portalSelf\n        Ember.debug(`${debugPrefix} Did not recieved a portalSelf - making xhr via AGRjs::getSelf`);\n        portalSelfPromise = (0, _arcgisRestRequest.getSelf)({ authentication: sessionInfo.authMgr, fetch: _fetch.default });\n      }\n\n      return portalSelfPromise.then(portal => {\n        Ember.debug(`${debugPrefix} Recieved portal and user information`);\n        sessionInfo.portal = portal;\n        sessionInfo.currentUser = portal.user;\n        // use the portal to assign the `.portal` to the authMgr\n        // authMgr expects a protocol, possible ports and paths\n        sessionInfo.authMgr.portal = (0, _urlUtils.getPortalRestUrl)(portal);\n        // reomvoe the user prop from the portal\n        delete sessionInfo.portal.user;\n        // check if we should load the user's groups...\n        if (this.get('settings.loadGroups')) {\n          Ember.debug(`${debugPrefix} Fetching user groups`);\n          return this._fetchUserGroups(sessionInfo.currentUser.username, sessionInfo.authMgr).then(userResponse => {\n            // use this user object...\n            sessionInfo.currentUser = userResponse;\n            return sessionInfo;\n          });\n        } else {\n          return sessionInfo;\n        }\n      }).then(sessionInfo => {\n        // unless web-tier, store the information\n        if (sessionInfo.authType !== 'web-tier') {\n          sessionInfo.expires = sessionInfo.authMgr.tokenExpires.getTime();\n          let sessionData = this._serializeSession(sessionInfo);\n          this._store('torii-provider-arcgis', sessionData);\n          sessionInfo.signoutUrl = this.get('signoutUrl');\n        }\n        /**\n         * This is what is attached into the torii session service, which we access\n         * in Ember apps as `session`\n         */\n        return sessionInfo;\n      }).catch(ex => {\n        // console.error(`${debugPrefix} exception occured ${ex}`);\n        throw new Error(`${debugPrefix} exception occured ${ex}`);\n      });\n    },\n\n    /**\n     * Fetch the user's groups\n     */\n    _fetchUserGroups(username, authMgr) {\n      // create the url\n      const userUrl = (0, _arcgisRestRequest.getPortalUrl)({\n        authentication: authMgr\n      }) + `/community/users/${username}`;\n      // fire off the request...\n      return (0, _arcgisRestRequest.request)(userUrl, {\n        authentication: authMgr,\n        httpMethod: \"GET\",\n        fetch: _fetch.default\n      });\n    },\n    /**\n     * Close a session (aka log out the user)\n     */\n    close() {\n      return new Ember.RSVP.Promise((resolve /*, reject */) => {\n        // always nuke the localStorage things\n        if (window.localStorage) {\n          window.localStorage.removeItem('torii-provider-arcgis');\n        }\n        // TODO find a cleaner means to handle this iframe jiggery pokery\n        if (this.get('settings.display') && this.get('settings.display') === 'iframe') {\n          throw new Error('To log out of ArcGIS Online, you should redirect the browser to ' + this.get('signoutUrl'));\n        }\n        resolve();\n      });\n    },\n\n    /**\n     * Rehydrate a session by looking for:\n     * - the esri_auth cookie or\n     * - localStorage::torii-provider-arcgis\n     */\n    fetch() {\n      let debugPrefix = 'torii adapter.fetch:: ';\n      // We want to prefer the cookie over localStorage. This is so that\n      // a user can switch accounts / ENV's @ AGO, and the app should use\n      // that set of creds, vs what may be in localStorage. If there is\n      // no cookie, (which is the case for apps not hosted @ *.arcgis.com)\n      // then we look in localStorage\n      let savedSession = this._checkCookie(this.get('authCookieName'));\n      // failing that look in localStorage\n      if (!savedSession.valid) {\n        savedSession = this._checkLocalStorage('torii-provider-arcgis');\n      }\n\n      // Did we get something from cookie or local storage?\n      if (savedSession.valid) {\n        Ember.debug(`${debugPrefix} Session is valid, rehydrating session...`);\n        // normalize the authData hash...\n        let authData = this._rehydrateSession(savedSession.properties);\n        // degate to the open function to do the work...\n        return this.open(authData);\n      } else {\n        // This is configurable so we don't even have this option for AGO\n        if (this.get('settings.webTier')) {\n          Ember.debug(`${debugPrefix} no local session information found. Attempting web-tier...`);\n          let portalUrl = this.get('portalBaseUrl');\n          return this.attemptWebTierPortalSelfCall(portalUrl).then(authData => {\n            // try to open the session.\n            return this.open(authData);\n          }).catch(ex => {\n            Ember.debug(`${debugPrefix} Web-tier failed. User is not logged in. ${ex}`);\n            throw new Error(`WebTier Auth not successful.`);\n          });\n        } else {\n          Ember.debug(`${debugPrefix} Web-tier not attempted. Web-tier not enabled for this application.`);\n          throw new Error(`WebTier Auth not successful.`);\n        }\n      }\n    },\n\n    /**\n     * Attempt to call porta/self sending same-origin credentials\n     * If we get a response that has a user object and user.username\n     * then we have successfully authenticated using web-tier auth.\n     */\n    attemptWebTierPortalSelfCall(portalUrl) {\n      let debugPrefix = 'torii adapter.attemptWebTierPortalSelfCall:: ';\n      // we make the portal/self call directly using fetch so we can control things\n      return (0, _fetch.default)(`${portalUrl}/sharing/rest/portals/self?f=json`, { credentials: 'same-origin' }).then(response => {\n        return response.json();\n      }).then(portalSelf => {\n        // many times the portal will return information w/o a token, so we\n        // really want to check if we got the user back... if we did... THEN we\n        // are pretty sure some web-tier auth has happened... we think.\n        if (portalSelf.user && portalSelf.user.username) {\n          Ember.debug(`${debugPrefix} Web-tier authentication succeeded.`);\n          // in addition to returning the payload, the porta/self call should also\n          // have set the esri_auth cookie... which we will now read...\n          let result = this._checkCookie(this.get('authCookieName'));\n          result.properties.portal = portalUrl;\n          result.properties.withCredentials = true;\n          let authData = this._rehydrateSession(result.properties);\n          // We are sending along the portalSelf we already have so we can short circuit\n          // and not make the same call again...\n          authData.properties.portalSelf = portalSelf;\n          return authData;\n        } else {\n          // we are not web-tier authenticated...\n          Ember.debug(`${debugPrefix} Web-tier portal/self call succeeded but user was not returned. User is not logged in.`);\n          throw new Error(`WebTier Auth not successful.`);\n        }\n      }).catch(ex => {\n        Ember.debug(`${debugPrefix} Web-tier authentication failed. User is not logged in. ${ex}`);\n        throw new Error(`WebTier Auth not successful.`);\n      });\n    },\n    /**\n     * Given a hash of authentication infomation\n     * create a UserSession object, whic is an IAuthenticationManager\n     * which is used by arcgis-rest::request\n     */\n    _createAuthManager(settings) {\n\n      let debugPrefix = 'torii adapter._createAuthManager:: ';\n      Ember.debug(`${debugPrefix} Creating AuthMgr`);\n\n      // default to the portal as defined in the torii config\n      let portalUrl = this.get('settings').portalUrl + '/sharing/rest';\n      Ember.debug(`${debugPrefix} Torii Config PortalUrl: ${portalUrl}`);\n      // --------------------------------------------------------------------\n      // for AGO, the cookie will have urlKey and customBaseUrl,\n      // but we can't use this because we may be authenticating against a\n      // different environment - so we *must* use the portalUrl from the\n      // configuration so that the portal/self call will reject using the\n      // token from the rehydrated\n      // if (settings.urlKey && settings.customBaseUrl) {\n      //   portalUrl = `https://${settings.urlKey}.${settings.customBaseUrl}/sharing/rest`;\n      // }\n      // --------------------------------------------------------------------\n      let options = {\n        clientId: settings.clientId,\n        // in an ArcGIS Online cookie, the username is tagged as an email.\n        username: settings.username ? settings.username : settings.email,\n        token: settings.token,\n        tokenDuration: parseInt(settings.expires_in),\n        portal: portalUrl\n      };\n      // but if we happen to pass it in, use that...\n      if (settings.portal) {\n        options.portal = settings.portal;\n      }\n      // set the tokenExpires date...\n      options.tokenExpires = new Date();\n      let now = Date.now();\n      let expires = new Date(now + options.tokenDuration * 60 * 1000);\n      options.tokenExpires = expires;\n      Ember.debug(`${debugPrefix} got expiresIn value of ${options.tokenDuration} minutes which equates to ${options.tokenExpires}`);\n      // create the arcgis-rest-js auth manager aka UserSession\n      let sess = new _arcgisRestAuth.UserSession(options);\n      return sess;\n    },\n\n    _rehydrateSession(sessionInfo) {\n      let debugPrefix = 'torii adapter._rehydrateSession:: ';\n      // debug(`${debugPrefix} Rehydrating session ${JSON.stringify(sessionInfo,null,2)}`);\n      // create the authData object for open\n      let session = {\n        properties: sessionInfo\n      };\n      // calcuate expires_in based on current timestamp\n      // web-tier auth cookie does not have the expires property\n      // that is because the browser has user creds which never expire.\n      // However, arcgis-rest-js's UserSession and request systems\n      // expect an expiry so we will simply create one set to 8 hours\n      let now = Date.now();\n      let expiresIn = 8 * 60; // 8 hous\n      if (sessionInfo.expires) {\n        Ember.debug(`${debugPrefix} sessionInfo.expires ${sessionInfo.expires} ${new Date(sessionInfo.expires)}`);\n        // that said, if the hash does have an expires value (which is a timestamp in ms)\n        // then we should use that (converted to minutes from now)\n        expiresIn = Math.floor((sessionInfo.expires - now) / 60000);\n        Ember.debug(`${debugPrefix} which is ${expiresIn} minutes from now.`);\n      }\n      session.properties.expires_in = expiresIn;\n\n      // if a poral prop is on the hash - in this case it's the portalUrl\n      if (sessionInfo.portal) {\n        session.properties.portal = sessionInfo.portal + '/sharing/rest';\n      }\n      // Previously we had serialized UserSession into localStorage\n      // however, that led to issues with cross-env cookies (QA vs PROD vs DEV)\n      // Using the hash we originally used pre- ArcGIS Rest JS, does not\n      // have this issue.\n      session.authMgr = this._createAuthManager(sessionInfo);\n      // and return the object\n      return session;\n    },\n\n    /**\n     * Checks local storage for auth data\n     */\n    _checkLocalStorage(keyName) {\n      let debugPrefix = 'torii adapter.checkLocalStorage:: ';\n\n      let result = {\n        valid: false\n      };\n\n      if (window.localStorage) {\n        let stored = window.localStorage.getItem(keyName);\n        if (stored) {\n          result.properties = JSON.parse(stored);\n          if (new Date(result.properties.expires) > new Date()) {\n            Ember.debug(`${debugPrefix} Found session information in Local Storage.`);\n            result.valid = true;\n          } else {\n            Ember.debug(`${debugPrefix} Found *expired* session information in Local Storage.`);\n          }\n        } else {\n          Ember.debug(`${debugPrefix} No session information found in Local Storage.`);\n        }\n      }\n      return result;\n    },\n\n    /**\n     * Stores auth data in local storage\n     */\n    _store(keyName, object) {\n      if (window.localStorage) {\n        window.localStorage.setItem(keyName, JSON.stringify(object));\n      }\n    },\n\n    /**\n     * Helper to ensure consistent serialization\n     */\n    _serializeSession(sessionInfo) {\n      let data = {\n        accountId: sessionInfo.currentUser.orgId,\n        authType: sessionInfo.authType,\n        create: sessionInfo.currentUser.created,\n        culture: sessionInfo.currentUser.culture,\n        customBaseUrl: sessionInfo.portal.customBaseUrl,\n        // to mimic the ArcGIS Online cookie, we tag the username as an email.\n        email: sessionInfo.currentUser.username,\n        expires: sessionInfo.expires,\n        region: sessionInfo.currentUser.region,\n        role: sessionInfo.currentUser.role,\n        // serializing the session actually complicates other things\n        //serializedSession: sessionInfo.authMgr.serialize(),\n        token: sessionInfo.token,\n        withCredentials: sessionInfo.withCredentials\n      };\n      return data;\n    },\n\n    /**\n     * Check for and validate a cookie by name\n     */\n    _checkCookie(cookieName) {\n      let debugPrefix = 'torii adapter.checkCookie:: ';\n      let result = {\n        valid: false,\n        properties: {}\n      };\n\n      let cookieString = decodeURIComponent(document.cookie.replace(new RegExp('(?:(?:^|.*;)\\\\s*' + encodeURIComponent(cookieName).replace(/[\\-\\.\\+\\*]/g, '\\\\$&') + '\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$'), '$1')) || null; // eslint-disable-line\n\n      if (cookieString) {\n        // Ember.debug('torii:adapter:arcgis-oauth-bearer:checkCookie: Found cookie...');\n        // parse it\n        let cookieData = JSON.parse(cookieString);\n        // check if it has expired\n\n        if (new Date(cookieData.expires) > new Date()) {\n          // ok it's still valid... we still don't know if\n          // it is valid for the env we are working with, but we will return it\n          Ember.debug(`${debugPrefix} Cookie session has not expired yet`);\n        } else {\n          // There is an occasional bug where it seems that we can have valid tokens\n          // with expires values in the past. Where this gets really odd is that\n          // when we make a call to /authorize ahd this borked cookie is sent along\n          // the cookie is not overwritten w/ an updated cookie.\n          // Thus, we return the auth data in either case\n          Ember.debug(`${debugPrefix} Cookie session has expired - but we are still going to try to use it`);\n        }\n        result.properties = cookieData;\n        // check if we have the auth_tier prop in the cookie...\n        // this is only present when web-tier auth is configured for Portal\n        if (cookieData.auth_tier) {\n          // ensure it's not present in the properties\n          delete result.properties.auth_tier;\n          // we have web-tier\n          result.properties.withCredentials = true;\n          result.properties.authType = 'web-tier';\n        }\n        result.valid = true;\n      } else {\n        Ember.debug(`${debugPrefix} No session information found in Cookie.`);\n      }\n      return result;\n    }\n\n  });\n});","define('dummy/torii-providers/arcgis-oauth-bearer', ['exports', 'torii/providers/oauth2-bearer', 'torii/configuration', 'dummy/torii-providers/query-string', 'dummy/config/environment'], function (exports, _oauth2Bearer, _configuration, _queryString, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  var ArcGISOAuth = _oauth2Bearer.default.extend({\n\n    name: 'arcgis-oauth-bearer',\n\n    // Allow the portalUrl to be passed in, but default to ago\n    portalUrl: (0, _configuration.configurable)('portalUrl', 'https://www.arcgis.com'),\n\n    path: '/sharing/oauth2/authorize',\n\n    // construct the authorize end-point url based on the portalUrl\n    baseUrl: (0, _configuration.configurable)('baseUrl', function () {\n      return `${this.get('portalUrl')}${this.get('path')}`;\n    }),\n\n    showSocialLogins: (0, _configuration.configurable)('showSocialLogins', false),\n\n    display: (0, _configuration.configurable)('display', 'default'),\n\n    expiration: (0, _configuration.configurable)('expiration', 20160),\n\n    locale: (0, _configuration.configurable)('locale', 'en-us'),\n    // -----------------------------------------------------------------------\n    // Note: I tried a number of things to get rid of these eslint errors,\n    // and every thing I did caused things to #FAIL. Apparently torii relies\n    // on this is some way. :-(\n    // -----------------------------------------------------------------------\n    // eslint-disable-next-line ember/avoid-leaking-state-in-ember-objects\n    requiredUrlParams: ['response_type', 'showSocialLogins', 'display', 'expiration', 'locale'],\n    // eslint-disable-next-line ember/avoid-leaking-state-in-ember-objects\n    optionalUrlParams: ['client', 'parent', 'autoAccountCreateForSocial', 'socialLoginProviderName'],\n    // eslint-disable-next-line ember/avoid-leaking-state-in-ember-objects\n    responseParams: ['token', 'state', 'expires_in', 'username'],\n\n    customRedirectUri: (0, _configuration.configurable)('customRedirectUri', ''),\n\n    _currentBaseUrl: function () {\n      return [window.location.protocol, '//', window.location.host].join('');\n    },\n\n    buildQueryString: function (options) {\n      const requiredParams = this.get('requiredUrlParams'); // ['response_type', 'showSocialLogins', 'display', 'expiration', 'locale']; // this.get('requiredUrlParams');\n      const optionalParams = this.get('optionalUrlParams');\n\n      const qs = _queryString.default.create({\n        provider: this,\n        requiredParams: requiredParams,\n        optionalParams: optionalParams,\n        options\n      });\n\n      return qs.toString();\n    },\n\n    buildUrl: function (options) {\n      let base = this.get('baseUrl');\n      if (options.portalUrl || options.path) {\n        base = options.portalUrl || this.get('portalUrl');\n        const path = options.path || this.get('path');\n        base = `${base}${path}`;\n      }\n      delete options.portalUrl;\n      delete options.path;\n\n      const qs = this.buildQueryString(options);\n\n      return [base, qs].join('?');\n    },\n\n    /**\n    * shows the pop-up/iframe - we override the base implementation so\n    * we can merge the passed in options into the object before we show\n    * the login\n    */\n    open: function (options) {\n      let debugPrefix = 'torii provider.open:: ';\n      options = options || {};\n\n      if (options.remoteServiceName) {\n        // torii uses this to determine whether a popout or an iframe is used\n        // we need to be able to pass this option in at runtime\n        this.set('configuredRemoteServiceName', options.remoteServiceName);\n        delete options.remoteServiceName;\n      }\n\n      const display = options.display || this.get('display');\n      if (display === 'iframe') {\n        // the display parameter is sent on the url querystring\n        // if we are using an iframe, we need to set the parent to the current domain\n        options.parent = this._currentBaseUrl(); // window.location.protocol + '//' + window.location.hostname;\n      }\n\n      let uri = '';\n      // Check for a customized redirect uri. This can be useful if your app\n      // is hosted by rails or some other server-side rendering system, or\n      // if you have multiple apps fronted by nginx and you want to centralize\n      // the redirects.\n      if (this.get('customRedirectUri')) {\n        uri = this.get('customRedirectUri');\n      } else {\n        // Set the redirectUri to the redirect.html that's in the addon's public\n        // folder and exposed at /<addon-name>/redirect.html\n        // By default torii redirects to the whole ember app, which can be really slow\n        // given that it's just 10 lines of js that's needed\n        if (_environment.default.baseURL || _environment.default.rootURL) {\n          let path = _environment.default.baseURL || _environment.default.rootURL;\n          uri = this._currentBaseUrl() + path + 'torii-provider-arcgis/redirect.html';\n        } else {\n          uri = this._currentBaseUrl() + '/' + 'torii-provider-arcgis/redirect.html';\n        }\n      }\n\n      this.set('redirectUri', uri);\n\n      let name = this.get('name');\n      let url = this.buildUrl(options);\n      let responseParams = this.get('responseParams');\n      // hopefully someone can explain to me the whole camelize() thing someday\n      let clientId = this.get('clientId');\n      let portalUrl = this.get('portalUrl') + '/sharing/rest';\n      let redirectUri = this.get('redirectUri') + `?clientId=${clientId}`;\n\n      // open the popup/iframe and start polling localStorage for the auth info...\n      return this.get('popup').open(url, responseParams, options).then(function (authData) {\n        // hey look! Auth info! Let's check if we're missing anything we need...\n        var missingResponseParams = [];\n        responseParams.forEach(function (param) {\n          if (authData[param] === undefined) {\n            missingResponseParams.push(param);\n          }\n        });\n        // if so, throw w an error. This would only happen if AGO/Portal changed it's response structure\n        if (missingResponseParams.length) {\n          throw new Error(`${debugPrefix} The response from the provider is missing these required response params: ${missingResponseParams.join(', ')}`);\n        }\n        // attach in more info that arcgisRest wants\n        authData.clientId = clientId;\n        authData.portal = portalUrl;\n        // if we went through a sign-in process, then we're not dealing w/ web-tier auth...\n        // thus we never have to send the IWA user credentials\n        authData.withCredentials = false;\n        authData.authType = 'token';\n        Ember.debug(`${debugPrefix} is returning with data...`);\n        // this hash it passed over to the adapter.open method\n        return {\n          properties: authData,\n          provider: name,\n          redirectUri: redirectUri\n        };\n      });\n    }\n\n  }); /*\n       * Copyright (c) 2016-2018 Esri\n       * Apache-2.0\n      */\n\n  /**\n   * arcgis-oauth.js\n   *\n   * torii provider that works with ArcGIS.com oauth\n   */\n  exports.default = ArcGISOAuth;\n});","define('dummy/torii-providers/query-string', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /*\n   * Copyright (c) 2016-2018 Esri\n   * Apache-2.0\n  */\n\n  function isValue(value) {\n    return value || value === false;\n  }\n\n  function getParamValue(obj, paramName, optional) {\n    var camelizedName = Ember.String.camelize(paramName),\n        value = Ember.get(obj, camelizedName);\n\n    if (!optional) {\n      if (!isValue(value) && isValue(Ember.get(obj, paramName))) {\n        throw new Error('Use camelized versions of url params. (Did not find ' + '\"' + camelizedName + '\" property but did find ' + '\"' + paramName + '\".');\n      }\n\n      if (!isValue(value)) {\n        throw new Error('Missing url param: \"' + paramName + '\". (Looked for: property named \"' + camelizedName + '\".');\n      }\n    }\n\n    return isValue(value) ? encodeURIComponent(value) : undefined;\n  }\n\n  function getOptionalParamValue(obj, paramName) {\n    return getParamValue(obj, paramName, true);\n  }\n\n  exports.default = Ember.Object.extend({\n    init: function () {\n      this.obj = this.provider;\n      this.urlParams = Ember.A(Ember.copy(this.requiredParams)).uniq();\n      this.optionalUrlParams = Ember.A(Ember.copy(this.optionalParams || [])).uniq();\n\n      this.optionalUrlParams.forEach(function (param) {\n        if (this.urlParams.indexOf(param) > -1) {\n          throw new Error(\"Required parameters cannot also be optional: '\" + param + \"'\");\n        }\n      }, this);\n    },\n\n    toString: function () {\n      const urlParams = this.urlParams;\n      const optionalUrlParams = this.optionalUrlParams;\n      const obj = this.obj;\n      const keyValuePairs = Ember.A([]);\n\n      const options = this.get('options');\n      const optionsKeys = Object.keys(options);\n\n      urlParams.forEach(paramName => {\n        if (!optionsKeys.includes(paramName)) {\n          var paramValue = getParamValue(obj, paramName);\n          keyValuePairs.push([paramName, paramValue]);\n        }\n      });\n\n      optionalUrlParams.forEach(paramName => {\n        if (!optionsKeys.includes(paramName)) {\n          var paramValue = getOptionalParamValue(obj, paramName);\n          if (isValue(paramValue)) {\n            keyValuePairs.push([paramName, paramValue]);\n          }\n        }\n      });\n\n      optionsKeys.forEach(paramName => {\n        keyValuePairs.push([paramName, encodeURIComponent(options[paramName])]);\n      });\n\n      return keyValuePairs.map(function (pair) {\n        return pair.join('=');\n      }).join('&');\n    }\n  });\n});","define('dummy/utils/url-utils', ['exports', 'torii-provider-arcgis/utils/url-utils'], function (exports, _urlUtils) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'getPortalHostname', {\n    enumerable: true,\n    get: function () {\n      return _urlUtils.getPortalHostname;\n    }\n  });\n  Object.defineProperty(exports, 'splitUrl', {\n    enumerable: true,\n    get: function () {\n      return _urlUtils.splitUrl;\n    }\n  });\n  Object.defineProperty(exports, 'getPortalUrl', {\n    enumerable: true,\n    get: function () {\n      return _urlUtils.getPortalUrl;\n    }\n  });\n});","\n","define('dummy/config/environment', [], function() {\n  var prefix = 'dummy';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","\n          if (!runningTests) {\n            require(\"dummy/app\")[\"default\"].create({\"domainServiceUrl\":\"https://servicesqa.arcgis.com/97KLIFOSt5CxbiRI/arcgis/rest/services/sitedomains/FeatureServer/0\"});\n          }\n        \n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrhDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrvazKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;","file":"dummy.js"}